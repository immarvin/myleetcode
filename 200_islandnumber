class Solution(object):
    def __fill(self,grid,row,col):
        grid[row][col]='2'
        if row>0 and grid[row-1][col]=='1':
            self.__fill(grid,row-1,col)
        if row<len(grid)-1 and grid[row+1][col]=='1':
            self.__fill(grid,row+1,col)
        if col>0 and grid[row][col-1]=='1':
            self.__fill(grid,row,col-1)
        if col<len(grid[0])-1 and grid[row][col+1]=='1':
            self.__fill(grid,row,col+1)
        return
            
        
    def numIslands(self, grid):
        """
        :type grid: List[List[str]]
        :rtype: int
        """
        islandcount=0
        for row in range(len(grid)):
            for col in range(len(grid[row])):
                if grid[row][col]=='1':
                    self.__fill(grid,row,col)
                    islandcount++
                if grid[row][col]=='2':
                    grid[row][col]='1'
        return islandcount
        
